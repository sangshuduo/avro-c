name: Codecov
on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install packages
        run: sudo apt-get install lzma-dev libjansson-dev libsnappy-dev

      - name: Test
        run: |
          mkdir debug
          cd debug
          cmake .. -DCOVER=true
          make
          # case 0: no arg
          ./build/bin/avrotool
          # case 1: --help
          ./build/bin/avrotool --help
          # case 2: test -w
          ./build/bin/avrotool -w ../out.avro -m ../sampledata/schema.json -d ../sampledata/data.csv -g
          # case 3: test -r
          ./build/bin/avrotool -r ../out.avro -g -c 5
          # case 4: test -s
          ./build/bin/avrotool -s ../out.avro -g
          # case 5: read wrong schema
          ./build/bin/avrotool -w ../failure.avro -d ../sampledata/schema.json -m ../sampledata/data.csv -g || :
            # case 6: write protected file
          ./build/bin/avrotool -w /bin/dmesg -m ../sampledata/schema.json -d ../sampledata/data.csv || :
            # case 7: read invalid file
          ./build/bin/avrotool -r /bin/dmesg -g || :
            # case 8: unknown argument
          ./build/bin/avrotool -r /bin/dmesg -x || :
          # case 9: test -r invalid number
          ./build/bin/avrotool -r ../out.avro -g -c x || :
            # case 10: write file with nonexist data
          ./build/bin/avrotool -w ../failure.avro -m ../sampledata/schema.json -d ../sampledata/data || :
            # case 11: write file with nonexist schema
          ./build/bin/avrotool -w ../failure.avro -m ../sampledata/schema -d ../sampledata/data || :

          gcov -abcfu ../src/avrotool.c -o src/CMakeFiles/avrotool.dir/avrotool.c.gcno
      - name: Upload
        uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: debug/avrotool.c.gcov
